"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.extractConditionFields = void 0;
const node_opcua_pseudo_session_1 = require("node-opcua-pseudo-session");
function extractConditionFields(session, conditionNodeId) {
    return __awaiter(this, void 0, void 0, function* () {
        // conditionNodeId could be a Object of type ConditionType
        // or it could be directly a ObjectType which is a subType of ConditionType
        const p = yield (0, node_opcua_pseudo_session_1.extractFields)(session, conditionNodeId);
        const fields1 = (0, node_opcua_pseudo_session_1.simpleBrowsePathsToString)(p.map((a) => a.path));
        // add this field which will always be added
        fields1.push("ConditionId");
        return fields1;
    });
}
exports.extractConditionFields = extractConditionFields;
//# sourceMappingURL=client_alarm_tools_extractConditionFields.js.map